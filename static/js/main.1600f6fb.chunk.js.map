{"version":3,"sources":["Components/firstView.js","Components/today.js","Components/nextDays.js","Components/todayHilights.js","Components/header.js","Components/error.js","Components/navigator.js","Components/loading.js","Components/container.js","Components/App.js","index.js"],"names":["FirstView","updateCity","currentLocation","lat","lng","useState","value","setValue","className","type","name","id","placeholder","onChange","e","target","checked","onClick","preventDefault","src","alt","title","Today","data","days","celsius","location","current","forecast","day","Date","getDay","time","last_updated","isDay","setIsDay","update","setUpdate","lastUpdated","getTime","useEffect","interval","setInterval","clearInterval","is_day","condition","code","text","Math","round","feelslike_c","feelslike_f","trunc","forecastday","daily_chance_of_rain","country","NextDays","map","forecastDay","date_epoch","date","weekDay","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","TodaysHighlights","weatherCards","setWeatherCards","cards","setCards","cardsLoop","cardWidth","getBoundingClientRect","width","forEach","ele","i","classList","contains","style","left","document","querySelector","Array","from","querySelectorAll","uv","maxValue","styles","buildStyles","pathColor","wind_kph","wind_dir","astro","sunrise","sunset","humidity","vis_km","gust_kph","active","nextElementSibling","add","remove","previousElementSibling","Header","props","isC","setToggle","toggle","setDark","toggleContainer","handleDark","Error","isError","isLoading","errorMessage","Navigator","setIsNav","navMessage","Loading","Container","city","setCity","url","setData","setIsC","setIsLoading","setIsError","setErrorMessage","isNav","setNaveMessage","isFirstView","setIsFirstView","dark","setLat","setLng","posittion","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","fetchLocationName","fetch","then","res","status","json","catch","setTimeout","method","headers","fetchData","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1600f6fb.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst FirstView = ({ updateCity, currentLocation, lat, lng }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (value) {\r\n      updateCity(value);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"first-view\">\r\n      <form className=\"search-container\">\r\n        <i className=\"fas fa-search\"></i>\r\n        <input\r\n          type=\"search\"\r\n          name=\"search\"\r\n          id=\"search\"\r\n          value={value}\r\n          className=\"search\"\r\n          placeholder=\"Search for places ...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          checked\r\n        />\r\n        <button id=\"submit\" className=\"submit\" onClick={handleSubmit}>\r\n          <img\r\n            src=\"./images/icons/location.png\"\r\n            alt=\"location\"\r\n            className=\"location\"\r\n            title=\"submit\"\r\n          />\r\n        </button>\r\n      </form>\r\n      <div\r\n        className=\"current-location\"\r\n        onClick={() => {\r\n          currentLocation(lat, lng);\r\n        }}\r\n      >\r\n        <img\r\n          src=\"./images/icons/location-off.png\"\r\n          alt=\"location off\"\r\n          title=\"Current location\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstView;\r\n","import { useState, useEffect } from \"react\";\r\nimport FirstView from \"./firstView\";\r\n\r\nconst Today = ({\r\n  data,\r\n  days,\r\n  updateCity,\r\n  celsius,\r\n  currentLocation,\r\n  lat,\r\n  lng,\r\n}) => {\r\n  const { location, current, forecast } = data;\r\n  const day = days[new Date().getDay()];\r\n  const time = current.last_updated;\r\n  const [isDay, setIsDay] = useState(\"\");\r\n  const [update, setUpdate] = useState(0);\r\n  const lastUpdated =\r\n    (new Date().getTime() - new Date(time).getTime()) / 1000 / 60;\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setUpdate(lastUpdated);\r\n    }, 20000);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (current.is_day === 1) {\r\n      setIsDay(\"day\");\r\n    } else {\r\n      setIsDay(\"night\");\r\n    }\r\n  }, [current.is_day]);\r\n\r\n  return (\r\n    <section className=\"today\">\r\n      <FirstView\r\n        updateCity={updateCity}\r\n        currentLocation={currentLocation}\r\n        lat={lat}\r\n        lng={lng}\r\n      />\r\n\r\n      {/*ANCHOR Today's weather */}\r\n\r\n      <section className=\"today-weather\">\r\n        <div className=\"current\">\r\n          <img\r\n            src={`./images/weather/${isDay}/${current.condition.code}.png`}\r\n            alt={current.condition.text}\r\n            title={current.condition.text}\r\n            className=\"today-status-img\"\r\n          />\r\n          <div className=\"current-temp-container\">\r\n            <h2 className=\"current-temp\">\r\n              {celsius\r\n                ? `${Math.round(current.feelslike_c)}`\r\n                : `${Math.round(current.feelslike_f)}`}\r\n            </h2>\r\n            <span>{celsius ? \"°C\" : \"°F\"}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"date-container\">\r\n          <h3 className=\"date\">{day}</h3>\r\n          <h3 className=\"time\">\r\n            Updated {Math.trunc(update) || Math.trunc(lastUpdated)}{\" \"}\r\n            {Math.trunc(update) === 1 ? \"minut\" : \"minuts\"} ago\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"prediction\">\r\n          <div className=\"air-status\">\r\n            <img\r\n              src=\"./images/icons/cloud.png\"\r\n              alt={current.condition.text}\r\n              title={current.condition.text}\r\n            />\r\n            <h4>{current.condition.text}</h4>\r\n          </div>\r\n          <div className=\"weather-status\">\r\n            <img\r\n              src=\"./images/icons/rain.png\"\r\n              alt=\"rain possibility\"\r\n              title=\"rain possibility\"\r\n            />\r\n            <h4>\r\n              Rain -\r\n              <span> {forecast.forecastday[0].day.daily_chance_of_rain}%</span>\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"search-result\">\r\n          <h3>\r\n            {location.country}, {location.name}\r\n          </h3>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Today;\r\n","const NextDays = ({ data, days, celsius }) => {\r\n  const { forecastday } = data;\r\n\r\n  return (\r\n    <section className=\"next-days\">\r\n      {forecastday.map((forecastDay) => {\r\n        const { day, date_epoch, date } = forecastDay;\r\n        const weekDay = days[new Date(date).getDay()];\r\n        return (\r\n          <div className=\"day\" key={date_epoch}>\r\n            <h4 className=\"name\">{weekDay}</h4>\r\n            <div className=\"status-img\">\r\n              <img\r\n                src={`./images/weather/day/${day.condition.code}.png`}\r\n                alt={day.condition.text}\r\n                title={day.condition.text}\r\n              />\r\n            </div>\r\n            <div className=\"temperature-degree\">\r\n              <h4 className=\"max\">\r\n                {celsius\r\n                  ? `${Math.round(day.maxtemp_c)}°`\r\n                  : `${Math.round(day.maxtemp_f)}°`}\r\n              </h4>\r\n              <h4 className=\"min\">\r\n                {celsius\r\n                  ? `${Math.round(day.mintemp_c)}°`\r\n                  : `${Math.round(day.mintemp_f)}°`}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NextDays;\r\n","import { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst TodaysHighlights = ({ data }) => {\r\n  const { current, forecast } = data;\r\n  const [weatherCards, setWeatherCards] = useState();\r\n  const [cards, setCards] = useState();\r\n\r\n  useEffect(() => {\r\n    setWeatherCards(document.querySelector(\".weather-cards\"));\r\n    setCards(Array.from(document.querySelectorAll(\".card\")));\r\n  }, []);\r\n\r\n  //ANCHOR Cards loop function\r\n  function cardsLoop() {\r\n    const cardWidth = cards[0].getBoundingClientRect().width;\r\n    cards.forEach((ele, i) => {\r\n      if (ele.classList.contains(\"active\")) {\r\n        weatherCards.style.left = `${-cardWidth * i}px`;\r\n      }\r\n    });\r\n  }\r\n\r\n  //ANCHOR Slide functions\r\n\r\n  function slidRight() {\r\n    const active = document.querySelector(\".card.active\");\r\n    if (active.nextElementSibling) {\r\n      active.nextElementSibling.classList.add(\"active\");\r\n      active.classList.remove(\"active\");\r\n      cardsLoop();\r\n    }\r\n  }\r\n\r\n  function slideLeft() {\r\n    const active = document.querySelector(\".card.active\");\r\n    if (active.previousElementSibling) {\r\n      active.previousElementSibling.classList.add(\"active\");\r\n      active.classList.remove(\"active\");\r\n      cardsLoop();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"today-highlights\">\r\n      <h2 className=\"headTitle\">today's higlights</h2>\r\n\r\n      <div className=\" weather-container\">\r\n        <div className=\"weather-cards\">\r\n          {/* ANCHOR UV Card */}\r\n          <div className=\"card uv active\">\r\n            <h3 className=\"cardHeader\">UV index</h3>\r\n            <div className=\"card-container\">\r\n              <div className=\"circle\">\r\n                <CircularProgressbar\r\n                  value={current.uv}\r\n                  maxValue={12}\r\n                  text={`${current.uv}`}\r\n                  styles={buildStyles({\r\n                    pathColor:\r\n                      current.uv <= 2\r\n                        ? \"#55d284\"\r\n                        : current.uv <= 5\r\n                        ? \"#ffdd00\"\r\n                        : current.uv <= 7\r\n                        ? \"#fbd72b\"\r\n                        : current.uv <= 10\r\n                        ? \"#f9484a\"\r\n                        : \"#de4daa\",\r\n                  })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/*ANCHOR Wind Card */}\r\n          <div className=\"card wind\">\r\n            <h3 className=\"cardHeader\">wind status</h3>\r\n            <div className=\"card-container\">\r\n              <div className=\"wind-speed\">\r\n                <h2>\r\n                  {current.wind_kph} <span> km/h</span>\r\n                </h2>\r\n              </div>\r\n              <div className=\"wind-direction\">\r\n                <img\r\n                  src=\"./images/icons/compass.png\"\r\n                  alt=\"wind direction\"\r\n                  title=\"wind direction\"\r\n                />\r\n                <h3>{current.wind_dir}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* ANCHOR Sun Card */}\r\n          <div className=\"card sunContainer\">\r\n            <h3 className=\"cardHeader\">rise & set</h3>\r\n\r\n            <div className=\"card-container\">\r\n              <div className=\"sunAction\">\r\n                <div className=\"sun rise\">\r\n                  <div className=\"imgContainer\">\r\n                    <img\r\n                      src=\"./images/icons/sunrise.png\"\r\n                      alt=\"sunrise\"\r\n                      title=\"sunrise\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"time\">\r\n                    <h2>{forecast.forecastday[0].astro.sunrise}</h2>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sun set\">\r\n                  <div className=\"imgContainer\">\r\n                    <img\r\n                      src=\"./images/icons/sunset.png\"\r\n                      alt=\"sunset\"\r\n                      title=\"sunset\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"time\">\r\n                    <h2>{forecast.forecastday[0].astro.sunset}</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* ANCHOR Humidity Card */}\r\n          <div className=\"card humidity \">\r\n            <h3 className=\"cardHeader\">humidity</h3>\r\n            <div className=\"card-container\">\r\n              <img\r\n                src=\"./images/icons/dew-point.png\"\r\n                alt=\"humidity\"\r\n                title=\"humidity\"\r\n              />\r\n              <h2>\r\n                {current.humidity} <span>%</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n\r\n          {/*ANCHOR Visibility Card */}\r\n          <div className=\"card visibility \">\r\n            <h3 className=\"cardHeader\">visibility</h3>\r\n\r\n            <div className=\"card-container\">\r\n              <img\r\n                src=\"./images/icons/low-visibility.png\"\r\n                alt=\"visibility\"\r\n                title=\"visibility\"\r\n              />\r\n              <h2>\r\n                {current.vis_km} <span>km</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n\r\n          {/* ANCHOR Gust Card */}\r\n          <div className=\"card gust \">\r\n            <h3 className=\"cardHeader\">gust status</h3>\r\n            <div className=\"card-container\">\r\n              <img\r\n                src=\"./images/icons/gust.png\"\r\n                alt=\"gust speed\"\r\n                title=\"gust speed\"\r\n              />\r\n              <h2>\r\n                {current.gust_kph} <span> km/h</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"rightArrow\" className=\"right-arrow\" onClick={slidRight}>\r\n          <i className=\"fas fa-caret-right\"></i>\r\n        </div>\r\n        <div id=\"leftArrow\" className=\"left-arrow\" onClick={slideLeft}>\r\n          <i className=\"fas fa-caret-left\"></i>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TodaysHighlights;\r\n","import { useEffect } from \"react\";\r\n\r\nconst Header = (props) => {\r\n  const { isC, celsius, setToggle, toggle, setDark } = props;\r\n\r\n  function handleToggle() {\r\n    setToggle(!toggle);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleDark = () => {\r\n      const toggleContainer = document.querySelector(\".toggle-mode\");\r\n\r\n      if (toggle) {\r\n        setDark(\"dark\");\r\n        toggleContainer.classList.add(\"active\");\r\n      } else {\r\n        setDark(\"\");\r\n        toggleContainer.classList.remove(\"active\");\r\n      }\r\n    };\r\n    handleDark();\r\n  }, [setDark, toggle]);\r\n\r\n  return (\r\n    <section className=\"header\">\r\n      <h2 className=\"temperature-heading\">Week</h2>\r\n      <div\r\n        className=\"toggle-mode\"\r\n        onClick={() => {\r\n          handleToggle();\r\n        }}\r\n      ></div>\r\n      <div className=\"temperature\">\r\n        <div\r\n          className={`celsius ${celsius ? \"active\" : \"\"}`}\r\n          onClick={() => isC(true)}\r\n        >\r\n          °C\r\n        </div>\r\n        <div\r\n          className={`fahrenheit ${!celsius ? \"active\" : \"\"}`}\r\n          onClick={() => isC(false)}\r\n        >\r\n          °F\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Error = ({ isError, isLoading, errorMessage }) => {\r\n  isLoading(false);\r\n  return (\r\n    <div\r\n      className=\"error\"\r\n      onClick={() => {\r\n        isError(false);\r\n      }}\r\n    >\r\n      <h2 className=\"errMessage\">{errorMessage}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","const Navigator = ({ setIsNav, isLoading, navMessage }) => {\r\n  isLoading(false);\r\n  return (\r\n    <div\r\n      className=\"navigator\"\r\n      onClick={() => {\r\n        setIsNav(false);\r\n      }}\r\n    >\r\n      <h2 className=\"errMessage\">{navMessage}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n","const Loading = () => {\r\n  return (\r\n    <section className=\"loading-container\">\r\n      <div className=\"loader\">\r\n        <img src=\"./images/icons/loading.gif\" alt=\"loader\" title=\"loading\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import Today from \"./today\";\r\nimport NextDays from \"./nextDays\";\r\nimport TodaysHighlights from \"./todayHilights\";\r\nimport Header from \"./header\";\r\nimport Error from \"./error\";\r\nimport Navigator from \"./navigator\";\r\nimport Loading from \"./loading\";\r\nimport FirstView from \"./firstView\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Container = () => {\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const [city, setCity] = useState(\"\");\r\n  const url = `https://weatherapi-com.p.rapidapi.com/forecast.json?q=${city}&days=5`;\r\n  const [data, setData] = useState([]);\r\n  const [isC, setIsC] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isNav, setIsNav] = useState(false);\r\n  const [navMessage, setNaveMessage] = useState(\"\");\r\n  const [isFirstView, setIsFirstView] = useState(true);\r\n  const [dark, setDark] = useState(\"\");\r\n  const [toggle, setToggle] = useState();\r\n  const [lat, setLat] = useState(\"\");\r\n  const [lng, setLng] = useState(\"\");\r\n\r\n  const posittion = () => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      let lat = pos.coords.latitude;\r\n      let lng = pos.coords.longitude;\r\n      setLat(lat);\r\n      setLng(lng);\r\n    });\r\n  };\r\n\r\n  // ANCHOR Fetching location name\r\n  function fetchLocationName(lat, lng) {\r\n    posittion();\r\n    setIsLoading(true);\r\n    setIsFirstView(false);\r\n    if (lat && lng) {\r\n      fetch(\r\n        `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lng}&limit=5&appid=d4e738da245099affa60b9e7902e2557`\r\n      )\r\n        .then((res) => {\r\n          if (res.status >= 200 && res.status <= 299) {\r\n            return res.json();\r\n          } else {\r\n            throw Error(\"\");\r\n          }\r\n        })\r\n        .then((data) => {\r\n          if (data[0].name) {\r\n            setCity(\"\");\r\n            setCity(data[0].name);\r\n          } else {\r\n            setIsFirstView(true);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setIsFirstView(true);\r\n          setIsLoading(false);\r\n          setNaveMessage(\"Please enable your location\");\r\n          setIsNav(true);\r\n          setTimeout(() => {\r\n            setIsNav(false);\r\n          }, 2000);\r\n        });\r\n    } else {\r\n      setIsFirstView(true);\r\n      setIsLoading(false);\r\n      setNaveMessage(\"Please enable your location\");\r\n      setIsNav(true);\r\n      setTimeout(() => {\r\n        setIsNav(false);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // ANCHOR Fetching data\r\n  function fetchData(url) {\r\n    setIsLoading(true);\r\n    setIsFirstView(false);\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": \"d89cc6705emsh6983c89f8aa44bcp1d3cc5jsnaa2af595bf47\",\r\n        \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <= 299) {\r\n          return res.json();\r\n        } else {\r\n          throw Error(\"\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setData(data);\r\n        setIsLoading(false);\r\n        setIsFirstView(false);\r\n        if (data.current.is_day) {\r\n          setDark(\"\");\r\n          setToggle(false);\r\n        } else {\r\n          setDark(\"dark\");\r\n          setToggle(true);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setIsFirstView(true);\r\n        setErrorMessage(\"Can't find place, please try again.\");\r\n        setIsError(true);\r\n        setTimeout(() => {\r\n          setIsError(false);\r\n        }, 2000);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    city && fetchData(url);\r\n    posittion();\r\n  }, [city, url]);\r\n\r\n  return (\r\n    <main className={`main-container ${dark}`}>\r\n      {isFirstView && (\r\n        <FirstView\r\n          updateCity={setCity}\r\n          currentLocation={fetchLocationName}\r\n          lat={lat}\r\n          lng={lng}\r\n        />\r\n      )}\r\n      {isError && (\r\n        <Error\r\n          isError={setIsError}\r\n          isLoading={setIsLoading}\r\n          errorMessage={errorMessage}\r\n        />\r\n      )}\r\n      {isNav && (\r\n        <Navigator\r\n          setIsNav={setIsNav}\r\n          isLoading={setIsLoading}\r\n          navMessage={navMessage}\r\n        />\r\n      )}\r\n\r\n      <section className=\"container\">\r\n        {isLoading && !isFirstView && <Loading />}\r\n\r\n        {/* ANCHOR Today */}\r\n        {!isLoading && !isFirstView && (\r\n          <Today\r\n            data={data}\r\n            days={days}\r\n            celsius={isC}\r\n            updateCity={setCity}\r\n            currentLocation={fetchLocationName}\r\n            lat={lat}\r\n            lng={lng}\r\n          />\r\n        )}\r\n\r\n        {/* ANCHOR Week Forecast */}\r\n        {!isLoading && !isFirstView && (\r\n          <section className=\"forecast\">\r\n            <Header\r\n              isC={setIsC}\r\n              celsius={isC}\r\n              toggle={toggle}\r\n              setToggle={setToggle}\r\n              setDark={setDark}\r\n            />\r\n            <NextDays data={data.forecast} days={days} celsius={isC} />\r\n            <TodaysHighlights data={data} />\r\n          </section>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import Container from \"./container\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}